---
import type { ActiveIntegration, OfficialIntegration, Integration } from "astro-dashboard-ui";
import { execaCommand } from "execa";
import { activeIntegrations, officialIntegrations } from "../../data/astro-dashboard-ui/integrations.ts";
import { CopyButton } from "../../components/astro-dashboard-ui/CopyButton.tsx";
import { AddButton } from "../../components/astro-dashboard-ui/AddButton.tsx";
import BaseLayout from "../../layouts/astro-dashboard-ui/BaseLayout.astro";

let message: string | null = null;

if (Astro.request.method === "POST") {
    // Get command from the request, e.g. `react`, `tailwind`
    const data = await Astro.request.formData();
    const command = data.get("command")!.toString();

    // Execute the `[npx|pnpx|yarn] astro add` command
    await execaCommand(command, { stdio: "inherit" });

    // Refresh the page and add message notification
    new Response(null, { status: 200 });
    message = "Restart the server to update the dashboard"
}
---

<BaseLayout title="Integrations">
    <header class="container page-header">
        {message ? <p>{message}</p> : null}
        <h1>Integrations</h1>
    </header>
    <main class="container flow page-content">
        <section aria-labelledby="active-integrations-title">
            <h2 id="active-integrations-title">Active integrations</h2>
            <ul class="integrations-type-list">
                {activeIntegrations.map((integration: ActiveIntegration) => (
                    integration.items.length ? (
                        <li>
                            <article>
                                <h3>{integration.name}</h3>
                                <ul class="flow integration-list">
                                    {integration.items.map((item: Integration) => (
                                        <li>
                                            <article class="card card-header">
                                                <h4>{item.name}</h4>
                                                <a href={item.url} target="_blank" rel="noopener noreferrer">Homepage</a>
                                            </article>
                                        </li>
                                    ))}
                                </ul>
                            </article>
                        </li>
                    ) : null
                ))}
            </ul>
        </section>
        <section aria-labelledby="official-integrations-title">
            <h2 id="official-integrations-title">Official integrations</h2>
            <ul class="integrations-type-list">
                {officialIntegrations.map((integration: OfficialIntegration) => (
                    <li>
                        <article>
                            <h3>{integration.name}</h3>
                            <ul class="flow integration-list">
                                {integration.items.map((item: Integration) => (
                                    <li>
                                        <article class="card" data-status={item.active ? 'active' : undefined}>
                                            <header>
                                                <h4>{item.name}</h4>
                                                <a href={item.url} target="_blank" rel="noopener noreferrer">Homepage</a>
                                            </header>
                                            {item.active ? (
                                                null
                                            ) : (
                                                item.command ? (
                                                    <CopyButton client:idle command={item.command}>
                                                        {item.command}
                                                    </CopyButton>
                                                    <form method="POST">
                                                        <AddButton client:idle command={item.command}>Add</AddButton>
                                                    </form>
                                                ) : null
                                            )}
                                        </article>
                                    </li>
                                ))}
                            </ul>
                        </article>
                    </li>
                ))}
            </ul>
        </section>
    </main>
</BaseLayout>

<style>
:where(.page-header) {
    padding-block: 4rem;
}

:where(.page-content) {
    --flow-space: 8rem;
}

:where(h2) {
    color: hsl(257 27% 36%);
    text-transform: uppercase;
    letter-spacing: .05em;
    font-size: 0.8rem;
    margin-block-end: 1rem;
}

:where(h3) {
    margin-block-end: 1rem;
}

:where(.integrations-type-list) {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(min(100%, 18.75rem), 1fr));
    gap: 2rem;
    align-items: start;
}

:where(.integration-list) {
    --flow-space: 1rem;
}
</style>
